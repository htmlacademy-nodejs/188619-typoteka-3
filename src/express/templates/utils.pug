-
  const humanifyDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleString().slice(0, -3);
  }

-
  const prettifyDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleString().slice(0, 10);
  }

-
  const slice = (text, limit = 100) => {
    const result = text.length >= limit ? text.substring(0, limit) + `...` : text;
    return result;
  }

mixin pagination(page, totalPages, width, prefix)
  -
    // вычислим начальную и конечную страницу диапазона без учёта ограничений
    let start = page - width;
    let end = page + width;

    // передвинем диапазон вправо, если он начинается с номера меньше единицы 
    if(start < 1){
      end += 1 - start;
      start = 1;
    }
    // передвинем диапазон влево, если он заканчивается номером больше количества страниц
    if(end > totalPages){
      start -= end - totalPages;
      end = totalPages;
    }

    // если мы оказались в этой ветке, значит, всего страниц слишком мало. делаем начало диапазона 1
    if(start < 1){
      start = 1;
    }
    let i = start - 1

  .preview__toggle-wrapper
    ul.preview__pagination.pagination
      if start > 1
        li.pagination__item
          a.pagination__button.button.button--backwards(href=`${prefix}page=${page - 1}`) Назад
      while i++ < end
        li.pagination__item(class={'pagination__item--active': i === page})
          a(href=`${prefix}page=${i}`)= i
      if end < totalPages
        li.pagination__item
          a.pagination__button.button.button--forward(href=`${prefix}page=${page + 1}`) Вперёд


mixin insertErrorMessage(messages)
  if messages
    .form__validation-error
      ul.form__errors
        each message in messages
          li.form__error= message
